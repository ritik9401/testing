name: konnect-gateway-deployment

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  deploy_to_konnect:
    runs-on: ubuntu-latest
    name: Deploying Kong Configuration
    steps:
      # Steps for deploying Kong configuration

  publish-customer-api-to-portal:
    name: Publish OAS to dev portal
    needs: deploy_to_konnect
    runs-on: ubuntu-latest
    steps:
      # Steps for publishing OAS to the dev portal

      - name: Get Service ID
        if: ${{ needs.deploy_to_konnect.outputs.SERVICE_NOT_LINKED != 'true' }}
        run: |
          echo "Control Plane Id: $Control_Plane_ID"

          gateway_service_name="${{ vars.GATEWAY_SERVICE_NAME }}"

          service_id=$(curl --location "${{ secrets.ADMIN_API_URL }}/control-planes/$Control_Plane_ID/core-entities/services" \
            --header 'Authorization: ${{ secrets.KONNECT_TOKEN }}' \
            | jq -r --arg gateway_service_name "$gateway_service_name" '.data[] | select(.name == $gateway_service_name) | .id')
          echo "Service_ID=$service_id" >> $GITHUB_ENV

      - name: Fetch Product Version ID using Service ID
        if: ${{ needs.deploy_to_konnect.outputs.SERVICE_NOT_LINKED != 'true' }}
        run: |
          service_id="${{ env.Service_ID }}"

          response=$(curl --request GET \
            --url "${{ secrets.ADMIN_API_URL }}/api-products/$API_PRODUCT_ID/product-versions" \
            --header 'Content-Type: application/json' \
            --header 'Authorization: ${{ secrets.KONNECT_TOKEN }}')
            
          product_version_id=$(echo "$response" | jq -r --arg service_id "$service_id" '.data[] | select(.gateway_service.id == $service_id) | .id // empty')
          echo "API_PRODUCT_VERSION_ID=$product_version_id" >> $GITHUB_ENV

          # Check if product_version_id is empty (not linked) and set a flag in the environment
          if [ -z "$product_version_id" ]; then
            echo "SERVICE_NOT_LINKED=true" >> $GITHUB_ENV
          else
            echo "Unlinking service from product version..."
            curl --location --request PATCH "${{ secrets.ADMIN_API_URL }}/api-products/$API_PRODUCT_ID/product-versions/$product_version_id" \
              --header 'Authorization: ${{ secrets.KONNECT_TOKEN }}' \
              --header 'Content-Type: application/json' \
              --data '{
                "gateway_service": null
              }'
          fi

      - name: Link service to the product version
        if: ${{ needs.deploy_to_konnect.outputs.SERVICE_NOT_LINKED != 'true' }}
        run: |
          echo "API PRODUCT ID: $API_PRODUCT_ID"
          echo "Control Plane ID: $Control_Plane_ID"
          echo "Service ID: $Service_ID"
          echo "API Product Version ID: $API_Product_Version_ID"

          curl --location --request PATCH "${{ secrets.ADMIN_API_URL }}/api-products/$API_PRODUCT_ID/product-versions/$API_Product_Version_ID" \
            --header 'Authorization: ${{ secrets.KONNECT_TOKEN }}' \
            --header 'Content-Type: application/json' \
            --data "{
              \"name\": \"v1\",
              \"publish_status\": \"published\",
              \"deprecated\": false,
              \"notify\": true,
              \"gateway_service\": {
                \"control_plane_id\": \"$Control_Plane_ID\",
                \"id\": \"$Service_ID\"
              }
            }"
